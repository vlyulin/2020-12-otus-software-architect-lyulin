{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "Billing Service API",
    "description" : "",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "http://arch.homework/billingservice/v1/",
    "description" : "Billing service URL"
  } ],
  "paths" : {
    "/accounts" : {
      "post" : {
        "summary" : "Create an account",
        "requestBody" : {
          "description" : "Account",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful account creation",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string",
                  "example" : "accounts/:account_id"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity"
          }
        }
      }
    },
    "/accounts/{account_id}/depositation" : {
      "parameters" : [ {
        "name" : "account_id",
        "in" : "path",
        "description" : "Account ID",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      } ],
      "post" : {
        "summary" : "Depositing money into an account",
        "requestBody" : {
          "description" : "Amount",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sum"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          }
        }
      }
    },
    "/accounts/{account_id}/withdraw" : {
      "parameters" : [ {
        "name" : "account_id",
        "in" : "path",
        "description" : "Account ID",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      } ],
      "post" : {
        "summary" : "Withdraw money",
        "requestBody" : {
          "description" : "Amount",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sum"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "400" : {
            "description" : "Insufficient funds to write off"
          }
        }
      }
    },
    "/accounts/{account_id}" : {
      "parameters" : [ {
        "name" : "account_id",
        "in" : "path",
        "description" : "Account ID",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      } ],
      "get" : {
        "summary" : "Get balance",
        "responses" : {
          "200" : {
            "description" : "Account balance",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sum"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity"
          }
        }
      }
    }
  },
  "security" : [ {
    "cookieAuth" : [ ]
  } ],
  "components" : {
    "securitySchemes" : {
      "cookieAuth" : {
        "type" : "apiKey",
        "in" : "cookie",
        "name" : "session_id"
      }
    },
    "schemas" : {
      "Account" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "balance" : {
            "type" : "number",
            "format" : "float"
          },
          "currency" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "Sum" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "float"
          },
          "currency" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "Currency" : {
        "type" : "string",
        "enum" : [ "RUB", "USD", "EUR" ]
      }
    }
  }
}